(()=>{"use strict";var n={83:(n,t,e)=>{e.d(t,{A:()=>s});var i=e(601),o=e.n(i),r=e(314),a=e.n(r)()(o());a.push([n.id,"#main-card {\n    background: rgba(255, 255, 255, 0.2); \n    border-radius: 12px;\n    box-shadow: 0 4px 10px rgba(83, 2, 2, 0.2); /* Sombra mÃ¡s suave y visible */\n    padding: 20px;\n    margin: 10px;\n    max-width: 250px;\n    transition: transform 0.3s ease; \n  }\n  \n  #main-card:hover {\n    transform: scale(1.05);\n  }\n  \n  .image-container img {\n    width: 100%;\n    border-radius: 8px;\n    max-height: 150px;\n  }\n  \n  .info-container {\n    margin-top: 10px;\n  }\n  \n  .info-container h1 {\n    font-size: 18px;\n    margin-bottom: 5px;\n  }\n  \n  .info-container p {\n    font-size: 14px;\n    color: grey; /* Cambiamos el color de los textos a blanco */\n  }\n  ",""]);const s=a},314:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",i=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),i&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),i&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,i,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(i)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var d=0;d<n.length;d++){var h=[].concat(n[d]);i&&a[h[0]]||(void 0!==r&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=r),e&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=e):h[2]=e),o&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=o):h[4]="".concat(o)),t.push(h))}},t}},601:n=>{n.exports=function(n){return n[1]}}},t={};function e(i){var o=t[i];if(void 0!==o)return o.exports;var r=t[i]={id:i,exports:{}};return n[i](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var i in t)e.o(t,i)&&!e.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:t[i]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t);var i,o=e(83);!function(n){n.image="image",n.name="name",n.status="status",n.species="species",n.type="type",n.origin="origin",n.nameoffirstepisode="nameoffirstepisode"}(i||(i={}));class r extends HTMLElement{static get observedAttributes(){return Object.keys(i)}attributeChangedCallback(n,t,e){n!==t&&(this[n]=e,this.render())}constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n        <style>${o.A}</style>  \n        <section id="main-card">\n          <div class="image-container">\n            <img class="image" src="${this.image}" alt="image">\n          </div>\n          <div class="info-container">\n            <h1>${this.name||"No name"}</h1>\n            <p>${this.status||"No status"}</p>\n            <p>${this.species||"No specie"}</p>\n            <p>${this.type||"No type"}</p>\n            <p>${this.origin||"No origin"}</p>\n            <p>${this.nameoffirstepisode||"No episode"}</p>\n          </div>\n        </section>\n      `)}}customElements.define("characters-card",r);var a=function(n,t,e,i){return new(e||(e=Promise))((function(o,r){function a(n){try{c(i.next(n))}catch(n){r(n)}}function s(n){try{c(i.throw(n))}catch(n){r(n)}}function c(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(a,s)}c((i=i.apply(n,t||[])).next())}))};class s extends HTMLElement{constructor(){super(),this.cards=[],this.dataApi=[],this.attachShadow({mode:"open"})}connectedCallback(){return a(this,void 0,void 0,(function*(){this.render()}))}fetchCharacters(n){return a(this,void 0,void 0,(function*(){this.dataApi=yield(n=>{return t=void 0,e=void 0,o=function*(){try{return(yield fetch(`https://rickandmortyapi.com/api/character?limit=${n}`).then((n=>n.json()))).results.slice(0,n)}catch(n){console.error(n)}},new((i=void 0)||(i=Promise))((function(n,r){function a(n){try{c(o.next(n))}catch(n){r(n)}}function s(n){try{c(o.throw(n))}catch(n){r(n)}}function c(t){var e;t.done?n(t.value):(e=t.value,e instanceof i?e:new i((function(n){n(e)}))).then(a,s)}c((o=o.apply(t,e||[])).next())}));var t,e,i,o})(n),this.cards=[],this.createCardsRickandMorty(),this.render()}))}createCardsRickandMorty(){this.dataApi.forEach((n=>{const t=this.ownerDocument.createElement("characters-card");t.setAttribute(i.image,n.image),t.setAttribute(i.name,n.name),t.setAttribute(i.status,n.status),t.setAttribute(i.species,n.species),t.setAttribute(i.type,n.type),t.setAttribute(i.origin,n.origin.name),t.setAttribute(i.nameoffirstepisode,n.episode[0]),this.cards.push(t)}))}render(){var n,t;if(this.shadowRoot){this.shadowRoot.innerHTML='\n       \n        <section id="main-container">\n                    <h1>Rick and Morty Characters</h1>\n\n                    <section id="input-container">\n                        <input type="number" id="characterCount" placeholder="Enter number of characters" />\n                        <button id="fetchButton">Fetch Characters</button>\n                    </section>\n\n                    <section id="cardsContainer"></section>\n                </section>\n\n                <style>\n                    #main-container {\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        justify-content: center;\n                        padding: 20px;\n                    }\n\n                    #input-container {\n                        text-align: center;\n                        margin-bottom: 20px;\n                    }\n\n                    #cardsContainer {\n                        display: flex;\n                        flex-wrap: wrap;\n                        justify-content: center;\n                        gap: 20px;\n                        width: 100%;\n                    }\n\n                    h1 {\n                        color: brown;\n                        text-align: center;\n                        width: 100%;\n                    }\n        </style>\n      ';const e=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector("#fetchButton");null==e||e.addEventListener("click",(()=>{var n;const t=null===(n=this.shadowRoot)||void 0===n?void 0:n.querySelector("#characterCount"),e=parseInt(t.value);e&&e>0&&this.fetchCharacters(e)}));const i=null===(t=this.shadowRoot)||void 0===t?void 0:t.querySelector("#cardsContainer");this.cards.forEach((n=>{null==i||i.appendChild(n)}))}}}customElements.define("app-container",s)})();